# -*- coding: utf-8 -*-
# Generated by Django 1.11.12 on 2018-04-24 18:22
from __future__ import unicode_literals

import alarms.models
import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc
import gm2m.fields

VAR_APP = settings.VAR_MODEL.split('.')[0]
DEVICE_APP = settings.DEVICE_MODEL.split('.')[0]


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        (VAR_APP, '0001_initial'),
        (DEVICE_APP, '0001_initial'),
        ('auth', '0008_alter_user_username_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),

    ]

    operations = [
        migrations.CreateModel(
            name='Alarm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
                ('slug', models.SlugField(blank=True, max_length=80)),
                ('formula', models.TextField(blank=True, default='code', help_text='Por ejemplo: "{{ var.value }} < 5" |\n                        Analizara la variable seleccionada, previamente por el monitor,\n                        evaluara esta formula y entregara un valor Booleano. IMPORTANTE: DEVOLVER VALOR BOOLEANO\n                        Puede usar el filtro bit para obtener un bit de un nÃºmero, ejmplo: {{ var.value | bit:2 }} ', max_length=255, validators=[django.core.validators.MaxLengthValidator(255)])),
                ('duration', models.FloatField(default=0, help_text='In hours.')),
                ('description', models.CharField(default='default', max_length=255)),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('can_subscribe', 'Can subscribe alarm'),),
            },
        ),
        migrations.CreateModel(
            name='AlarmEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alarm_type', models.CharField(choices=[('US', 'User'), ('DV', 'Device'), ('ND', 'No-Device')], default='US', max_length=2)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('finished', models.DateTimeField(null=True)),
                ('description', models.CharField(default='description', max_length=255, null=True)),
                ('alarm', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='alarms.Alarm')),
                ('content_type', gm2m.fields.GM2MField(blank=True, through_fields=('gm2m_src', 'gm2m_tgt', 'gm2m_ct', 'gm2m_pk'))),
                ('device', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='fotuto_models.Device')),
                ('variables', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='fotuto_models.Var')),
            ],
        ),
        migrations.CreateModel(
            name='Monitor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lookups', models.TextField(blank=True, help_text='Valido para Q objects relacionado con variables. Ejemplo: Q(device__id__in=[1,2],\n                            Q(value__gte=2) | Q(value__lte=0) .\n                        Los Q objects podran estar separados por (,) , (|) o (&), dependiendo de la necesidad\n                            y la complejidad del query. Dudas sobre el manejo de Q objects?\n                            https://docs.djangoproject.com/en/1.11/topics/db/queries/#complex-lookups-with-q-objects\n                              Debe seleccionar entre variables, devices o ingresar una sentencia en Lookups, solo una de ellas. ', max_length=255, null=True, validators=[django.core.validators.RegexValidator("(^(\\(*~?Q\\([\\w]+=[\\w\\[\\],-_']+\\)\\)*\\s?[,&\\|]\\s?)*\\(*~?Q\\([\\w]+=[\\w\\[\\],-_']+\\)\\)*)$", message='Lookup Incorrecto, asegurese separar por (,), (&) o (|) cada Q object.\n                            No dejar ningun caracter al final del ultimo Q object. '), alarms.models.validate_expression])),
                ('start_time', models.DateTimeField(default=datetime.datetime(2018, 4, 24, 18, 22, 10, 85563, tzinfo=utc))),
                ('duration', models.FloatField(default=0, help_text='In hours')),
                ('frequency', models.CharField(choices=[('D', 'Diario'), ('M', 'Mensual'), ('S', 'Semanal'), ('A', 'Anual')], default='D', max_length=1)),
                ('weight', models.IntegerField(blank=True, default=0, null=True)),
                ('active', models.BooleanField(default=False)),
                ('devices', models.ManyToManyField(blank=True, to='fotuto_models.Device')),
                ('variables', models.ManyToManyField(blank=True, null=True, to='fotuto_models.Var')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('checked', 'Checked'), ('unchecked', 'Unchecked')], default='unchecked', max_length=10)),
                ('event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='alarms.AlarmEvent')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(default=datetime.datetime(2018, 4, 24, 18, 22, 10, 89925, tzinfo=utc))),
                ('email', models.BooleanField(default=True)),
                ('staff_template', models.CharField(blank=True, max_length=50, null=True)),
                ('user_template', models.CharField(blank=True, max_length=50, null=True)),
                ('staff_template_text', models.TextField(blank=True, null=True)),
                ('user_template_text', models.TextField(blank=True, null=True)),
                ('alarm', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='alarms.Alarm')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='auth.Group')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('can_change_activation', 'Can change activation'),),
            },
        ),
        migrations.AddField(
            model_name='alarm',
            name='monitor',
            field=models.ManyToManyField(default=None, to='alarms.Monitor'),
        ),
    ]
